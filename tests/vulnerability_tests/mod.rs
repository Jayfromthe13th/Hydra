//! Vulnerability test suite for Hydra analyzer
//! Tests common Move smart contract vulnerabilities

mod unauthorized_drain_vulnerability;
mod timestamp_manipulation_vulnerability;
mod expired_project_creation_vulnerability;
mod owner_cap_bypass_vulnerability;
mod reward_division_vulnerability;
mod cross_leaderboard_voting_vulnerability;

#[cfg(test)]
mod tests {
    use super::*;
    use crate::analyzer::HydraAnalyzer;
    use crate::analyzer::types::*;

    #[test]
    fn test_all_vulnerabilities() {
        let analyzer = HydraAnalyzer::new();
        
        // Run all vulnerability tests
        test_unauthorized_drain(&analyzer);
        test_timestamp_manipulation(&analyzer);
        test_expired_project_creation(&analyzer);
        test_owner_cap_bypass(&analyzer);
        test_reward_division(&analyzer);
        test_cross_leaderboard_voting(&analyzer);
    }
} 