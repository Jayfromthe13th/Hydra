module game::leaderboard {
    use sui::object::{Self, ID};
    use sui::balance::{Self, Balance};
    use sui::coin::{Self, Coin};
    use sui::clock::Clock;

    public fun withdraw<T>(
        project_manager: &mut ProjectManager,
        project_owner_cap: ProjectOwnerCap<T>,
        leaderboard: &mut Leaderboard<T>,
        project_id: ID,
        clock: &Clock,
        ctx: &mut TxContext,
    ): Coin<T> {
        let project = bag::remove<ID, Project<T>>(
            &mut project_manager.projects,
            project_id
        );

        let Project {
            id,
            balance: withdrawed_balance,
            leaderboard_id: _,
        } = project;
        object::delete(id);

        coin::from_balance(withdrawed_balance, ctx)
    }
} 