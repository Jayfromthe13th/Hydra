module game::leaderboard {
    use sui::object::{Self, ID};
    use sui::balance::{Self, Balance};
    use sui::coin::{Self, Coin};
    use sui::clock::Clock;

    public fun withdraw<T>(
        project_manager: &mut ProjectManager,
        project_owner_cap: ProjectOwnerCap<T>,
        leaderboard: &mut Leaderboard<T>,
        project_id: ID,
        clock: &Clock,
        ctx: &mut TxContext,
    ): Coin<T> {
        //

        // BUG: Division error when claimed_reward_amount > 30
        let reward = balance::split(
            &mut leaderboard.reward,
            reward_value / (30 - leaderboard.claimed_reward_amount)
        );

        //
        coin::from_balance(reward, ctx)
    }
} 